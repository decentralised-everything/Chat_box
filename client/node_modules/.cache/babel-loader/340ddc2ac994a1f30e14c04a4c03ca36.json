{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rishabh Barnwal\\\\Desktop\\\\JS\\\\Chat_box\\\\client\\\\src\\\\components\\\\Input\\\\Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { lazy, useState, Suspense } from \"react\";\nimport Emojifier from \"./emojify\";\nimport \"./Input.css\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport SentimentSatisfiedSharpIcon from \"@material-ui/icons/SentimentSatisfiedSharp\";\nimport PublishRoundedIcon from \"@material-ui/icons/PublishRounded\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleEmoji = /*#__PURE__*/lazy(_c = () => import(\"../Emoji/ToggleEmoji\"));\n_c2 = ToggleEmoji;\n\nconst Input = ({\n  setMessage,\n  sendMessage,\n  message\n}) => {\n  _s();\n\n  const [showEmoji, setShowEmoji] = useState(false);\n  const [fileUpload, setFileUpload] = useState(false);\n\n  const onChangePicture = e => {\n    if (e.target.files[0]) {\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", () => {\n        setMessage({ ...message,\n          image: reader.result\n        });\n      });\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n\n  const Example = ({\n    imgData\n  }) => imgData ? /*#__PURE__*/_jsxDEV(\"img\", {\n    src: `data:image/jpeg;base64,${imgData}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 19\n  }, this) : null;\n\n  let files;\n\n  const fileUploadHandler = () => {\n    setFileUpload(!fileUpload);\n  };\n\n  if (fileUpload) {\n    files = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fileUpload\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        id: \"imageFile\",\n        onChange: onChangePicture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: message.image,\n        className: \"imgPreview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      placeholder: \"Type a message...\",\n      value: message.text,\n      onChange: ({\n        target: {\n          value\n        }\n      }) => setMessage({ ...message,\n        text: Emojifier(value)\n      }),\n      onKeyPress: event => event.key === \"Enter\" ? sendMessage(event) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: files\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Example, {\n      imgData: message.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"uploadButton\",\n      onClick: e => {\n        fileUploadHandler();\n        e.preventDefault();\n      },\n      children: /*#__PURE__*/_jsxDEV(PublishRoundedIcon, {\n        fontSize: \"medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"EmojiButton\",\n      onClick: e => {\n        setShowEmoji(!showEmoji);\n        e.preventDefault();\n      },\n      children: /*#__PURE__*/_jsxDEV(SentimentSatisfiedSharpIcon, {\n        fontSize: \"medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"sendButton\",\n      onClick: e => {\n        sendMessage(e);\n        setMessage({\n          text: \"\",\n          image: null\n        });\n        setFileUpload(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(SendIcon, {\n        fontSize: \"medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: null,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"listEmoji\",\n          children: /*#__PURE__*/_jsxDEV(ToggleEmoji, {\n            showEmoji: showEmoji,\n            setMessage: setMessage,\n            message: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Input, \"SO0GAXHPg3EsovYjP8d+llpfn+I=\");\n\n_c3 = Input;\nexport default Input;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ToggleEmoji$lazy\");\n$RefreshReg$(_c2, \"ToggleEmoji\");\n$RefreshReg$(_c3, \"Input\");","map":{"version":3,"sources":["C:/Users/Rishabh Barnwal/Desktop/JS/Chat_box/client/src/components/Input/Input.js"],"names":["React","lazy","useState","Suspense","Emojifier","SendIcon","SentimentSatisfiedSharpIcon","PublishRoundedIcon","ToggleEmoji","Input","setMessage","sendMessage","message","showEmoji","setShowEmoji","fileUpload","setFileUpload","onChangePicture","e","target","files","reader","FileReader","addEventListener","image","result","readAsDataURL","Example","imgData","fileUploadHandler","text","value","event","key","preventDefault"],"mappings":"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","sourcesContent":["import React, { lazy, useState, Suspense } from \"react\";\r\nimport Emojifier from \"./emojify\";\r\n\r\nimport \"./Input.css\";\r\n\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport SentimentSatisfiedSharpIcon from \"@material-ui/icons/SentimentSatisfiedSharp\";\r\nimport PublishRoundedIcon from \"@material-ui/icons/PublishRounded\";\r\n\r\nconst ToggleEmoji = lazy(() => import(\"../Emoji/ToggleEmoji\"));\r\n\r\nconst Input = ({ setMessage, sendMessage, message }) => {\r\n    const [showEmoji, setShowEmoji] = useState(false);\r\n    const [fileUpload, setFileUpload] = useState(false);\r\n\r\n    const onChangePicture = (e) => {\r\n        if (e.target.files[0]) {\r\n            const reader = new FileReader();\r\n            reader.addEventListener(\"load\", () => {\r\n                setMessage({ ...message, image: reader.result });\r\n            });\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const Example = ({ imgData }) =>\r\n        imgData ? <img src={`data:image/jpeg;base64,${imgData}`} /> : null;\r\n\r\n    let files;\r\n\r\n    const fileUploadHandler = () => {\r\n        setFileUpload(!fileUpload);\r\n    };\r\n\r\n    if (fileUpload) {\r\n        files = (\r\n            <div className=\"fileUpload\">\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    id=\"imageFile\"\r\n                    onChange={onChangePicture}\r\n                />\r\n                <img src={message.image} className=\"imgPreview\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <form className=\"form\">\r\n            <input\r\n                className=\"input\"\r\n                type=\"text\"\r\n                placeholder=\"Type a message...\"\r\n                value={message.text}\r\n                onChange={({ target: { value } }) =>\r\n                    setMessage({ ...message, text: Emojifier(value) })\r\n                }\r\n                onKeyPress={(event) =>\r\n                    event.key === \"Enter\" ? sendMessage(event) : null\r\n                }\r\n            />\r\n\r\n            <div>{files}</div>\r\n            <Example imgData={message.image} />\r\n\r\n            <button\r\n                className=\"uploadButton\"\r\n                onClick={(e) => {\r\n                    fileUploadHandler();\r\n                    e.preventDefault();\r\n                }}\r\n            >\r\n                <PublishRoundedIcon fontSize=\"medium\" />\r\n            </button>\r\n\r\n            <button\r\n                className=\"EmojiButton\"\r\n                onClick={(e) => {\r\n                    setShowEmoji(!showEmoji);\r\n                    e.preventDefault();\r\n                }}\r\n            >\r\n                <SentimentSatisfiedSharpIcon fontSize=\"medium\" />\r\n            </button>\r\n\r\n            <button\r\n                className=\"sendButton\"\r\n                onClick={(e) => {\r\n                    sendMessage(e);\r\n                    setMessage({ text: \"\", image: null });\r\n                    setFileUpload(false);\r\n                }}\r\n            >\r\n                <SendIcon fontSize=\"medium\" />\r\n            </button>\r\n\r\n            <div>\r\n                <Suspense fallback={null}>\r\n                    <div class=\"listEmoji\">\r\n                        <ToggleEmoji\r\n                            showEmoji={showEmoji}\r\n                            setMessage={setMessage}\r\n                            message={message}\r\n                        />\r\n                    </div>\r\n                </Suspense>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}